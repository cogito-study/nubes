datasource postgres {
  url = "***"
  provider = "postgres"
}

generator photon {
  provider = "photonjs"
}

enum NoteCategory {
  NOTE
  CASE_STUDY
}

enum UserRoleType {
  USER
  ADMIN
  PROFESSOR
}

model Department {
  id          String                 @default(cuid()) @id @unique
  name        String
  description String
  leader      User                   @relation(name: "DepartmentLeader")
  subjects    Subject[]              @relation(name: "DepartmentSubjects")
  institute   Institute              @relation(name: "DepartmentInstitute")
  permissions DepartmentPermission[] @relation(name: "DepartmentPermissions")
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  deletedAt   DateTime?
}

model Faculty {
  id          String              @default(cuid()) @id @unique
  name        String
  institute   Institute           @relation(name: "InstituteFaculties")
  majors      Major[]             @relation(name: "FacultyMajors")
  permissions FacultyPermission[] @relation(name: "FacultyPermissions")
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  deletedAt   DateTime?
}

model Institute {
  id          String                @default(cuid()) @id @unique
  name        String
  faculties   Faculty[]             @relation(name: "InstituteFaculties")
  departments Department[]          @relation(name: "DepartmentInstitute")
  users       User[]                @relation(name: "InstituteUsers")
  permissions InstitutePermission[] @relation(name: "InstitutePermissions")
  createdAt   DateTime              @default(now())
  updatedAt   DateTime              @updatedAt
  deletedAt   DateTime?
}

model Language {
  id       String    @default(cuid()) @id @unique
  code     String    @unique
  name     String
  users    User[]    @relation(name: "UserPrefferedLanguage")
  subjects Subject[] @relation(name: "SubjectLanguage")
}

model Major {
  id          String            @default(cuid()) @id @unique
  name        String
  faculty     Faculty           @relation(name: "FacultyMajors")
  subjects    Subject[]         @relation(name: "MajorSubjects")
  permissions MajorPermission[] @relation(name: "MajorPermissions")
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  deletedAt   DateTime?
}

model Note {
  id             String              @default(cuid()) @id @unique
  content        String
  contentHTML    String
  title          String
  number         Int
  description    String?
  noteCategory   NoteCategory
  suggestions    Suggestion[]        @relation(name: "NoteSuggestions")
  commentThreads NoteCommentThread[] @relation(name: "NoteCommentThreads")
  authors        User[]              @relation(name: "NoteAuthors")
  likers         User[]              @relation(name: "NoteLikers")
  highlights     NoteHighlight[]     @relation(name: "NoteHighlights")
  subject        Subject             @relation(name: "SubjectNotes")
  permissions    NotePermission[]    @relation(name: "NotePermissions")
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
  deletedAt      DateTime?
}

model NoteComment {
  id          String                  @default(cuid()) @id @unique
  content     String
  author      User                    @relation(name: "NoteCommentAuthor")
  likers      User[]                  @relation(name: "NoteCommentLikers")
  thread      NoteCommentThread?      @relation(name: "NoteCommentThreadComment")
  threadReply NoteCommentThread?      @relation(name: "NoteCommentThreadReplies")
  permissions NoteCommentPermission[] @relation(name: "NoteCommentPermissions")
  createdAt   DateTime                @default(now())
  updatedAt   DateTime                @updatedAt
  deletedAt   DateTime?
}

model NoteCommentThread {
  id          String                        @default(cuid()) @id @unique
  position    String
  comment     NoteComment                   @relation(name: "NoteCommentThreadComment")
  replies     NoteComment[]                 @relation(name: "NoteCommentThreadReplies")
  note        Note                          @relation(name: "NoteCommentThreads")
  permissions NoteCommentThreadPermission[] @relation(name: "NoteCommentThreadPermissions")
  createdAt   DateTime                      @default(now())
  updatedAt   DateTime                      @updatedAt
  deletedAt   DateTime?
}

model NoteHighlight {
  id          String                    @default(cuid()) @id @unique
  position    String
  user        User                      @relation(name: "UserNoteHighlights")
  note        Note                      @relation(name: "NoteHighlights")
  permissions NoteHighlightPermission[] @relation(name: "NoteHighlightPermissions")
  createdAt   DateTime                  @default(now())
  updatedAt   DateTime                  @updatedAt
  deletedAt   DateTime?
}

model PasswordToken {
  id        String    @default(cuid()) @id @unique
  token     String    @unique
  user      User      @relation(name: "PasswordTokenUser")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
}

model Subject {
  id           String               @default(cuid()) @id @unique
  code         String               @unique
  name         String
  description  String
  department   Department           @relation(name: "DepartmentSubjects")
  teachers     User[]               @relation(name: "SubjectTeachers")
  students     User[]               @relation(name: "SubjectStudents")
  informations SubjectInformation[] @relation(name: "SubjectInformations")
  notes        Note[]               @relation(name: "SubjectNotes")
  posts        Post[]               @relation(name: "SubjectPosts")
  language     Language             @relation(name: "SubjectLanguage")
  majors       Major[]              @relation(name: "MajorSubjects")
  permissions  SubjectPermission[]  @relation(name: "SubjectPermissions")
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  deletedAt    DateTime?
}

model SubjectInformation {
  id          String                         @default(cuid()) @id @unique
  title       String
  subtitle    String?
  content     String
  subject     Subject                        @relation(name: "SubjectInformations")
  permissions SubjectInformationPermission[] @relation(name: "SubjectInformationPermissions")
  createdAt   DateTime                       @default(now())
  updatedAt   DateTime                       @updatedAt
  deletedAt   DateTime?
}

model Suggestion {
  id          String                 @default(cuid()) @id @unique
  delta       String
  approvedAt  DateTime?
  rejectedAt  DateTime?
  likers      User[]                 @relation(name: "SuggestionLikers")
  approvedBy  User?                  @relation(name: "SuggestionApprovedBy")
  note        Note                   @relation(name: "NoteSuggestions")
  author      User                   @relation(name: "SuggestionAuthor")
  permissions SuggestionPermission[] @relation(name: "SuggestionPermissions")
  createdAt   DateTime               @default(now())
  updatedAt   DateTime               @updatedAt
  deletedAt   DateTime?
}

model User {
  id                  String              @default(cuid()) @id @unique
  email               String              @unique
  password            String
  profilePictureURL   String?
  firstName           String
  lastName            String
  phoneNumber         String?
  identifier          String
  position            String?
  activationToken     ActivationToken?
  ResetPasswordToken  ResetPasswordToken?
  isActive            Boolean             @default(false)
  role                UserRole            @relation(name: "UserRole")
  notes               Note[]              @relation(name: "NoteAuthors")
  noteHighlights      NoteHighlight[]     @relation(name: "UserNoteHighlights")
  suggestions         Suggestion[]        @relation(name: "SuggestionAuthor")
  approvedSuggestions Suggestion[]        @relation(name: "SuggestionApprovedBy")
  teachedSubjects     Subject[]           @relation(name: "SubjectTeachers")
  studiedSubjects     Subject[]           @relation(name: "SubjectStudents")
  likedNotes          Note[]              @relation(name: "NoteLikers")
  noteComments        NoteComment[]       @relation(name: "NoteCommentAuthor")
  postComments        PostComment[]       @relation(name: "PostCommentAuthor")
  likedNoteComments   NoteComment[]       @relation(name: "NoteCommentLikers")
  likedPostComments   PostComment[]       @relation(name: "CommentLikers")
  likedPosts          Post[]              @relation(name: "PostLikers")
  posts               Post[]              @relation(name: "PostAuthor")
  likedSuggestions    Suggestion[]        @relation(name: "SuggestionLikers")
  passwordToken       PasswordToken?      @relation(name: "PasswordTokenUser")
  departments         Department[]        @relation(name: "DepartmentLeader")
  institutes          Institute[]         @relation(name: "InstituteUsers")
  preferredLanguage   Language?           @relation(name: "UserPrefferedLanguage")
  userPermissions     UserPermission[]    @relation(name: "UserUserPermissions")
  createdAt           DateTime            @default(now())
  updatedAt           DateTime            @updatedAt
  deletedAt           DateTime?
}

model Post {
  id          String           @default(cuid()) @id @unique
  content     String
  author      User             @relation(name: "PostAuthor")
  subject     Subject          @relation(name: "SubjectPosts")
  likers      User[]           @relation(name: "PostLikers")
  comments    PostComment[]    @relation(name: "PostPostComments")
  permissions PostPermission[] @relation(name: "PostPermissions")
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  deletedAt   DateTime?
}

model PostComment {
  id          String                  @default(cuid()) @id @unique
  content     String
  author      User                    @relation(name: "PostCommentAuthor")
  post        Post                    @relation(name: "PostPostComments")
  likers      User[]                  @relation(name: "CommentLikers")
  permissions PostCommentPermission[] @relation(name: "PostCommentPermissions")
  createdAt   DateTime                @default(now())
  updatedAt   DateTime                @updatedAt
  deletedAt   DateTime?
}

model ActivationToken {
  id        String   @default(cuid()) @id @unique
  user      User
  token     String   @unique
  createdAt DateTime @default(now())
}

model ResetPasswordToken {
  email     String   @default(cuid()) @id @unique
  token     String   @unique
  createdAt DateTime @default(now())
}

model UserRole {
  id        String       @default(cuid()) @id @unique
  name      String
  type      UserRoleType
  users     User[]       @relation(name: "UserRole")
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  deletedAt DateTime?
}

model DepartmentPermission {
  id        String                   @default(cuid()) @id @unique
  type      DepartmentPermissionType
  users     User[]                   @relation
  object    Department               @relation(name: "DepartmentPermissions")
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @updatedAt
  deletedAt DateTime?
}

enum DepartmentPermissionType {
  UPDATE_DEPARTMENT
  READ_DEPARTMENT
  DELETE_DEPARTMENT
  CREATE_SUBJECT
}

model FacultyPermission {
  id        String                @default(cuid()) @id @unique
  type      FacultyPermissionType
  users     User[]                @relation
  object    Faculty               @relation(name: "FacultyPermissions")
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
  deletedAt DateTime?
}

enum FacultyPermissionType {
  UPDATE_FACULTY
  READ_FACULTY
  DELETE_FACULTY
}

model InstitutePermission {
  id        String                  @default(cuid()) @id @unique
  type      InstitutePermissionType
  users     User[]                  @relation
  object    Institute               @relation(name: "InstitutePermissions")
  createdAt DateTime                @default(now())
  updatedAt DateTime                @updatedAt
  deletedAt DateTime?
}

enum InstitutePermissionType {
  UPDATE_INSTITUTE
  DELETE_INSTITUTE
  CREATE_DEPARTMENT
}

model MajorPermission {
  id        String              @default(cuid()) @id @unique
  type      MajorPermissionType
  users     User[]              @relation
  object    Major               @relation(name: "MajorPermissions")
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  deletedAt DateTime?
}

enum MajorPermissionType {
  UPDATE_MAJOR
  READ_MAJOR
  DELETE_MAJOR
}

model NoteCommentPermission {
  id        String                    @default(cuid()) @id @unique
  type      NoteCommentPermissionType
  users     User[]                    @relation
  object    NoteComment               @relation(name: "NoteCommentPermissions")
  createdAt DateTime                  @default(now())
  updatedAt DateTime                  @updatedAt
  deletedAt DateTime?
}

enum NoteCommentPermissionType {
  UPDATE_NOTE_COMMENT
  DELETE_NOTE_COMMENT
}

model NoteCommentThreadPermission {
  id        String                          @default(cuid()) @id @unique
  type      NoteCommentThreadPermissionType
  users     User[]                          @relation
  object    NoteCommentThread               @relation(name: "NoteCommentThreadPermissions")
  createdAt DateTime                        @default(now())
  updatedAt DateTime                        @updatedAt
  deletedAt DateTime?
}

enum NoteCommentThreadPermissionType {
  DELETE_NOTE_COMMENT_THREAD
}

model NoteHighlightPermission {
  id        String                      @default(cuid()) @id @unique
  type      NoteHighlightPermissionType
  users     User[]                      @relation
  object    NoteHighlight               @relation(name: "NoteHighlightPermissions")
  createdAt DateTime                    @default(now())
  updatedAt DateTime                    @updatedAt
  deletedAt DateTime?
}

enum NoteHighlightPermissionType {
  UPDATE_NOTE_HIGHLIGHT
  DELETE_NOTE_HIGHLIGHT
}

model NotePermission {
  id        String             @default(cuid()) @id @unique
  type      NotePermissionType
  users     User[]             @relation
  object    Note               @relation(name: "NotePermissions")
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  deletedAt DateTime?
}

enum NotePermissionType {
  READ_NOTE
  UPDATE_NOTE
  DELETE_NOTE
  CREATE_SUGGESTION
}

model PostCommentPermission {
  id        String                    @default(cuid()) @id @unique
  type      PostCommentPermissionType
  users     User[]                    @relation
  object    PostComment               @relation(name: "PostCommentPermissions")
  createdAt DateTime                  @default(now())
  updatedAt DateTime                  @updatedAt
  deletedAt DateTime?
}

enum PostCommentPermissionType {
  UPDATE_POSTCOMMENT
  DELETE_POSTCOMMENT
  READ_POSTCOMMENT
}

model PostPermission {
  id        String             @default(cuid()) @id @unique
  type      PostPermissionType
  users     User[]             @relation
  object    Post               @relation(name: "PostPermissions")
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  deletedAt DateTime?
}

enum PostPermissionType {
  CREATE_POSTCOMMENT
  UPDATE_POST
  DELETE_POST
  READ_POST
}

model SubjectPermission {
  id        String                @default(cuid()) @id @unique
  type      SubjectPermissionType
  users     User[]                @relation
  object    Subject               @relation(name: "SubjectPermissions")
  createdAt DateTime              @default(now())
  updatedAt DateTime              @updatedAt
  deletedAt DateTime?
}

enum SubjectPermissionType {
  CREATE_POST
  CREATE_SUBJECT_INFORMATION
  UPDATE_SUBJECT
  DELETE_SUBJECT
  READ_SUBJECT
  CREATE_NOTE
}

model SubjectInformationPermission {
  id        String                           @default(cuid()) @id @unique
  type      SubjectInformationPermissionType
  users     User[]                           @relation
  object    SubjectInformation               @relation(name: "SubjectInformationPermissions")
  createdAt DateTime                         @default(now())
  updatedAt DateTime                         @updatedAt
  deletedAt DateTime?
}

enum SubjectInformationPermissionType {
  READ_SUBJECT_INFORMATION
  UPDATE_SUBJECT_INFORMATION
  DELETE_SUBJECT_INFORMATION
}

model SuggestionPermission {
  id        String                   @default(cuid()) @id @unique
  type      SuggestionPermissionType
  users     User[]                   @relation
  object    Suggestion               @relation(name: "SuggestionPermissions")
  createdAt DateTime                 @default(now())
  updatedAt DateTime                 @updatedAt
  deletedAt DateTime?
}

enum SuggestionPermissionType {
  UPDATE_SUGGESTION
  READ_SUGGESTION
  DELETE_SUGGESTION
  APPROVE_SUGGESTION
  REJECT_SUGGESTION
}

model UserPermission {
  id        String             @default(cuid()) @id @unique
  type      UserPermissionType
  users     User[]             @relation
  object    User               @relation(name: "UserUserPermissions")
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  deletedAt DateTime?
}

enum UserPermissionType {
  UPDATE_USER
  DELETE_USER
}
