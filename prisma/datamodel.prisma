enum NoteType {
  NOTE
  CASE_STUDY
}

enum UserRole {
  USER
  PROFESSOR
  ADMIN
}

type Note {
  id: ID! @unique
  text: Json!
  title: String!
  number: Int!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
  author: User! @relation(name: "NotesByUser")
  subject: Subject!
  comments: [Comment!]!
  type: NoteType!
  upvotes: [User!]! @relation(name: "UpvotedNotes")
}

type Comment {
  id: ID! @unique
  text: String!
  locationInText: Json!
  createdAt: DateTime!
  updatedAt: DateTime!
  note: Note!
  author: User! @relation(name: "CommentsByUser")
  replies: [Comment!]!
  upvotes: [User!]! @relation(name: "UpvotedComments")
}

type Subject {
  id: ID! @unique
  code: String! @unique
  name: String!
  description: String!
  faculty: [User!]! @relation(name: "SubjectsByTeacher")
  students: [User!]! @relation(name: "SubjectsByStudent")
  info: [SubjectInfo!]!
  notes: [Note!]!
  prerequisites: [Subject!]!
}

type SubjectInfo {
  id: ID! @unique
  title: String!
  subtitle: String
  text: String!
  subject: Subject!
}

type User {
  id: ID! @unique
  email: String! @unique
  neptun: String
  isActive: Boolean! @default(value: "false")
  password: String!
  firstName: String
  lastName: String
  role: UserRole! @default(value: "USER")
}

type PasswordSetToken {
  id: ID! @unique @default(value: "12")
  token: String! @unique
  email: String! @unique
  createdAt: DateTime!
}
