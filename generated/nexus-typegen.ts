/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as ctx from '../src/types';
import * as photon from '@generated/photon';

declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>;
    model: NexusPrisma<TypeName, 'model'>;
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ActivateUserInput: {
    // input type
    password: string; // String!
    token: string; // String!
  };
  BooleanFilter: {
    // input type
    equals?: boolean | null; // Boolean
    not?: boolean | null; // Boolean
  };
  ConnectRelation: {
    // input type
    id: string; // ID!
  };
  CreateDepartmentInput: {
    // input type
    description: string; // String!
    institute: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    leader: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    name: string; // String!
  };
  CreateInstituteInput: {
    // input type
    name: string; // String!
  };
  CreateNoteCommentInput: {
    // input type
    author: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    content: string; // String!
    name: string; // String!
  };
  CreateNoteCommentThreadInput: {
    // input type
    comment: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    name: string; // String!
    note: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    position: string; // String!
  };
  CreateNoteHighlightInput: {
    // input type
    note: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    position: string; // String!
    user: NexusGenInputs['ConnectRelation']; // ConnectRelation!
  };
  CreateNoteInput: {
    // input type
    content: string; // String!
    contentHTML: string; // String!
    description?: string | null; // String
    name: string; // String!
    noteCategory: NexusGenEnums['NoteCategoryEnum']; // NoteCategoryEnum!
    number: number; // Int!
    subject: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    title: string; // String!
  };
  CreateSubjectInformationInput: {
    // input type
    content: string; // String!
    subject: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    subtitle?: string | null; // String
    title: string; // String!
  };
  CreateSubjectInput: {
    // input type
    code: string; // String!
    department: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    description: string; // String!
    language: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    name: string; // String!
  };
  CreateSuggestionInput: {
    // input type
    author: NexusGenInputs['ConnectRelation']; // ConnectRelation!
    delta: string; // String!
    note: NexusGenInputs['ConnectRelation']; // ConnectRelation!
  };
  DepartmentWhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
  ForgotPasswordInput: {
    // input type
    email?: string | null; // String
  };
  ImageUploadInput: {
    // input type
    extension: string; // String!
    file: string; // String!
  };
  InstituteWhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
  LanguageWhereUniqueInput: {
    // input type
    code?: string | null; // String
    id?: string | null; // ID
  };
  NoteCommentThreadWhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
  NoteCommentWhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
  NoteHighlightWhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
  NoteWhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
  NullableStringFilter: {
    // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  };
  QueryFindManyUserWhereInput: {
    // input type
    email?: NexusGenInputs['StringFilter'] | null; // StringFilter
    firstName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    identifier?: NexusGenInputs['StringFilter'] | null; // StringFilter
    isActive?: NexusGenInputs['BooleanFilter'] | null; // BooleanFilter
    lastName?: NexusGenInputs['StringFilter'] | null; // StringFilter
    phoneNumber?: NexusGenInputs['NullableStringFilter'] | null; // NullableStringFilter
    role?: NexusGenInputs['QueryFindManyUserWhereInput'] | null; // QueryFindManyUserWhereInput
  };
  ResetPasswordInput: {
    // input type
    password: string; // String!
    token: string; // String!
  };
  StringFilter: {
    // input type
    contains?: string | null; // String
    endsWith?: string | null; // String
    equals?: string | null; // String
    gt?: string | null; // String
    gte?: string | null; // String
    in?: string[] | null; // [String!]
    lt?: string | null; // String
    lte?: string | null; // String
    not?: string | null; // String
    notIn?: string[] | null; // [String!]
    startsWith?: string | null; // String
  };
  SubjectInformationWhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
  SubjectWhereUniqueInput: {
    // input type
    code?: string | null; // String
    id?: string | null; // ID
  };
  SuggestionWhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
  UpdateDepartmentInput: {
    // input type
    description?: string | null; // String
    leader?: NexusGenInputs['ConnectRelation'] | null; // ConnectRelation
    name?: string | null; // String
  };
  UpdateInstituteInput: {
    // input type
    name?: string | null; // String
  };
  UpdateNoteCommentInput: {
    // input type
    content?: string | null; // String
  };
  UpdateNoteHighlightInput: {
    // input type
    position?: string | null; // String
  };
  UpdateNoteInput: {
    // input type
    content?: string | null; // String
    contentHTML?: string | null; // String
    description?: string | null; // String
    name?: string | null; // String
    noteCategory?: NexusGenEnums['NoteCategoryEnum'] | null; // NoteCategoryEnum
    number?: number | null; // Int
    title?: string | null; // String
  };
  UpdateSubjectInformationInput: {
    // input type
    content?: string | null; // String
    subtitle?: string | null; // String
    title?: string | null; // String
  };
  UpdateSubjectInput: {
    // input type
    code?: string | null; // String
    description?: string | null; // String
    name?: string | null; // String
  };
  UpdateSuggestionInput: {
    // input type
    delta?: string | null; // String
  };
  UpdateUserInput: {
    // input type
    email?: string | null; // String
    password?: string | null; // String
  };
  UserLoginInput: {
    // input type
    email: string; // String!
    password: string; // String!
  };
  UserWhereUniqueInput: {
    // input type
    email?: string | null; // String
    id?: string | null; // ID
  };
  WhereUniqueInput: {
    // input type
    id?: string | null; // ID
  };
}

export interface NexusGenEnums {
  DepartmentPermissionTypeEnum: 'CREATE_SUBJECT' | 'DELETE_DEPARTMENT' | 'UPDATE_DEPARTMENT';
  InstitutePermissionTypeEnum: 'CREATE_DEPARTMENT' | 'DELETE_INSTITUTE' | 'UPDATE_INSTITUTE';
  NoteCategoryEnum: 'CASE_STUDY' | 'NOTE';
  NoteCommentPermissionTypeEnum: 'DELETE_NOTE_COMMENT' | 'UPDATE_NOTE_COMMENT';
  NoteCommentThreadPermissionTypeEnum: 'DELETE_NOTE_COMMENT_THREAD';
  NoteHighlightPermissionTypeEnum: 'DELETE_NOTE_HIGHLIGHT' | 'UPDATE_NOTE_HIGHLIGHT';
  NotePermissionTypeEnum: 'CREATE_SUGGESTION' | 'DELETE_NOTE' | 'UPDATE_NOTE';
  SubjectInformationPermissionTypeEnum: 'DELETE_SUBJECT_INFORMATION' | 'UPDATE_SUBJECT_INFORMATION';
  SubjectPermissionTypeEnum: 'CREATE_NOTE' | 'DELETE_SUBJECT' | 'UPDATE_SUBJECT';
  SuggestionPermissionTypeEnum: 'APPROVE_SUGGESTION' | 'DELETE_SUGGESTION' | 'REJECT_SUGGESTION' | 'UPDATE_SUGGESTION';
  UserPermissionTypeEnum: 'DELETE_USER' | 'UPDATE_USER';
  UserRoleTypeEnum: 'ADMIN' | 'PROFESSOR' | 'USER';
}

export interface NexusGenRootTypes {
  ActivationToken: photon.ActivationToken;
  AuthenticationPayload: {
    // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  };
  Department: photon.Department;
  DepartmentPermission: photon.DepartmentPermission;
  Institute: photon.Institute;
  InstitutePermission: photon.InstitutePermission;
  Language: photon.Language;
  Mutation: {};
  Note: photon.Note;
  NoteComment: photon.NoteComment;
  NoteCommentPermission: photon.NoteCommentPermission;
  NoteCommentThread: photon.NoteCommentThread;
  NoteCommentThreadPermission: photon.NoteCommentThreadPermission;
  NoteHighlight: photon.NoteHighlight;
  NoteHighlightPermission: photon.NoteHighlightPermission;
  NotePermission: photon.NotePermission;
  PasswordToken: photon.PasswordToken;
  Permission: photon.Permission;
  Query: {};
  ResetPasswordToken: photon.ResetPasswordToken;
  Subject: photon.Subject;
  SubjectInformation: photon.SubjectInformation;
  SubjectInformationPermission: photon.SubjectInformationPermission;
  SubjectPermission: photon.SubjectPermission;
  Suggestion: photon.Suggestion;
  SuggestionPermission: photon.SuggestionPermission;
  User: photon.User;
  UserPermission: photon.UserPermission;
  UserRole: photon.UserRole;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  ActivateUserInput: NexusGenInputs['ActivateUserInput'];
  BooleanFilter: NexusGenInputs['BooleanFilter'];
  ConnectRelation: NexusGenInputs['ConnectRelation'];
  CreateDepartmentInput: NexusGenInputs['CreateDepartmentInput'];
  CreateInstituteInput: NexusGenInputs['CreateInstituteInput'];
  CreateNoteCommentInput: NexusGenInputs['CreateNoteCommentInput'];
  CreateNoteCommentThreadInput: NexusGenInputs['CreateNoteCommentThreadInput'];
  CreateNoteHighlightInput: NexusGenInputs['CreateNoteHighlightInput'];
  CreateNoteInput: NexusGenInputs['CreateNoteInput'];
  CreateSubjectInformationInput: NexusGenInputs['CreateSubjectInformationInput'];
  CreateSubjectInput: NexusGenInputs['CreateSubjectInput'];
  CreateSuggestionInput: NexusGenInputs['CreateSuggestionInput'];
  DepartmentWhereUniqueInput: NexusGenInputs['DepartmentWhereUniqueInput'];
  ForgotPasswordInput: NexusGenInputs['ForgotPasswordInput'];
  ImageUploadInput: NexusGenInputs['ImageUploadInput'];
  InstituteWhereUniqueInput: NexusGenInputs['InstituteWhereUniqueInput'];
  LanguageWhereUniqueInput: NexusGenInputs['LanguageWhereUniqueInput'];
  NoteCommentThreadWhereUniqueInput: NexusGenInputs['NoteCommentThreadWhereUniqueInput'];
  NoteCommentWhereUniqueInput: NexusGenInputs['NoteCommentWhereUniqueInput'];
  NoteHighlightWhereUniqueInput: NexusGenInputs['NoteHighlightWhereUniqueInput'];
  NoteWhereUniqueInput: NexusGenInputs['NoteWhereUniqueInput'];
  NullableStringFilter: NexusGenInputs['NullableStringFilter'];
  QueryFindManyUserWhereInput: NexusGenInputs['QueryFindManyUserWhereInput'];
  ResetPasswordInput: NexusGenInputs['ResetPasswordInput'];
  StringFilter: NexusGenInputs['StringFilter'];
  SubjectInformationWhereUniqueInput: NexusGenInputs['SubjectInformationWhereUniqueInput'];
  SubjectWhereUniqueInput: NexusGenInputs['SubjectWhereUniqueInput'];
  SuggestionWhereUniqueInput: NexusGenInputs['SuggestionWhereUniqueInput'];
  UpdateDepartmentInput: NexusGenInputs['UpdateDepartmentInput'];
  UpdateInstituteInput: NexusGenInputs['UpdateInstituteInput'];
  UpdateNoteCommentInput: NexusGenInputs['UpdateNoteCommentInput'];
  UpdateNoteHighlightInput: NexusGenInputs['UpdateNoteHighlightInput'];
  UpdateNoteInput: NexusGenInputs['UpdateNoteInput'];
  UpdateSubjectInformationInput: NexusGenInputs['UpdateSubjectInformationInput'];
  UpdateSubjectInput: NexusGenInputs['UpdateSubjectInput'];
  UpdateSuggestionInput: NexusGenInputs['UpdateSuggestionInput'];
  UpdateUserInput: NexusGenInputs['UpdateUserInput'];
  UserLoginInput: NexusGenInputs['UserLoginInput'];
  UserWhereUniqueInput: NexusGenInputs['UserWhereUniqueInput'];
  WhereUniqueInput: NexusGenInputs['WhereUniqueInput'];
  DepartmentPermissionTypeEnum: NexusGenEnums['DepartmentPermissionTypeEnum'];
  InstitutePermissionTypeEnum: NexusGenEnums['InstitutePermissionTypeEnum'];
  NoteCategoryEnum: NexusGenEnums['NoteCategoryEnum'];
  NoteCommentPermissionTypeEnum: NexusGenEnums['NoteCommentPermissionTypeEnum'];
  NoteCommentThreadPermissionTypeEnum: NexusGenEnums['NoteCommentThreadPermissionTypeEnum'];
  NoteHighlightPermissionTypeEnum: NexusGenEnums['NoteHighlightPermissionTypeEnum'];
  NotePermissionTypeEnum: NexusGenEnums['NotePermissionTypeEnum'];
  SubjectInformationPermissionTypeEnum: NexusGenEnums['SubjectInformationPermissionTypeEnum'];
  SubjectPermissionTypeEnum: NexusGenEnums['SubjectPermissionTypeEnum'];
  SuggestionPermissionTypeEnum: NexusGenEnums['SuggestionPermissionTypeEnum'];
  UserPermissionTypeEnum: NexusGenEnums['UserPermissionTypeEnum'];
  UserRoleTypeEnum: NexusGenEnums['UserRoleTypeEnum'];
}

export interface NexusGenFieldTypes {
  ActivationToken: {
    // field return type
    createdAt: any; // DateTime!
    id: string; // ID!
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  };
  AuthenticationPayload: {
    // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  };
  Department: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    description: string; // String!
    id: string; // ID!
    institute: NexusGenRootTypes['Institute']; // Institute!
    leader: NexusGenRootTypes['User']; // User!
    name: string; // String!
    subjects: NexusGenRootTypes['Subject'][] | null; // [Subject!]
    updatedAt: any; // DateTime!
  };
  DepartmentPermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['Department'][] | null; // [Department!]
    type: NexusGenEnums['DepartmentPermissionTypeEnum']; // DepartmentPermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  Institute: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    departments: NexusGenRootTypes['Department'][] | null; // [Department!]
    id: string; // ID!
    name: string; // String!
    updatedAt: any; // DateTime!
    users: NexusGenRootTypes['User'][] | null; // [User!]
  };
  InstitutePermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['Institute'][] | null; // [Institute!]
    type: NexusGenEnums['InstitutePermissionTypeEnum']; // InstitutePermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  Language: {
    // field return type
    code: string; // String!
    id: string; // ID!
    name: string; // String!
  };
  Mutation: {
    // field return type
    activateUser: NexusGenRootTypes['AuthenticationPayload']; // AuthenticationPayload!
    createDepartment: NexusGenRootTypes['Department']; // Department!
    createInstitute: NexusGenRootTypes['Institute']; // Institute!
    createNote: NexusGenRootTypes['Note']; // Note!
    createNoteComment: NexusGenRootTypes['NoteComment']; // NoteComment!
    createNoteCommentThread: NexusGenRootTypes['NoteCommentThread']; // NoteCommentThread!
    createNoteHighlight: NexusGenRootTypes['NoteHighlight']; // NoteHighlight!
    createSubject: NexusGenRootTypes['Subject']; // Subject!
    createSubjectInformation: NexusGenRootTypes['SubjectInformation']; // SubjectInformation!
    createSuggestion: NexusGenRootTypes['Suggestion']; // Suggestion!
    deleteDepartment: NexusGenRootTypes['Department']; // Department!
    deleteInstitute: NexusGenRootTypes['Institute']; // Institute!
    deleteNote: NexusGenRootTypes['Note']; // Note!
    deleteNoteComment: NexusGenRootTypes['NoteComment']; // NoteComment!
    deleteNoteCommentThread: NexusGenRootTypes['NoteCommentThread']; // NoteCommentThread!
    deleteNoteHighlight: NexusGenRootTypes['NoteHighlight']; // NoteHighlight!
    deleteSubject: NexusGenRootTypes['Subject']; // Subject!
    deleteSubjectInformation: NexusGenRootTypes['SubjectInformation']; // SubjectInformation!
    deleteSuggestion: NexusGenRootTypes['Suggestion']; // Suggestion!
    deleteUser: NexusGenRootTypes['User']; // User!
    forgotPassword: string; // String!
    login: NexusGenRootTypes['AuthenticationPayload']; // AuthenticationPayload!
    resetPassword: NexusGenRootTypes['AuthenticationPayload']; // AuthenticationPayload!
    updateDepartment: NexusGenRootTypes['Department']; // Department!
    updateInstitute: NexusGenRootTypes['Institute']; // Institute!
    updateNote: NexusGenRootTypes['Note']; // Note!
    updateNoteComment: NexusGenRootTypes['NoteComment']; // NoteComment!
    updateNoteHighlight: NexusGenRootTypes['NoteHighlight']; // NoteHighlight!
    updateSubject: NexusGenRootTypes['Subject']; // Subject!
    updateSubjectInformation: NexusGenRootTypes['SubjectInformation']; // SubjectInformation!
    updateSuggestion: NexusGenRootTypes['Suggestion']; // Suggestion!
    updateUser: NexusGenRootTypes['User']; // User!
    uploadImage: string; // String!
  };
  Note: {
    // field return type
    authors: NexusGenRootTypes['User'][] | null; // [User!]
    commentThreads: NexusGenRootTypes['NoteCommentThread'][] | null; // [NoteCommentThread!]
    content: string; // String!
    contentHTML: string; // String!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    description: string | null; // String
    highlights: NexusGenRootTypes['NoteHighlight'][] | null; // [NoteHighlight!]
    id: string; // ID!
    likers: NexusGenRootTypes['User'][] | null; // [User!]
    likesCount: number; // Int!
    noteCategory: NexusGenEnums['NoteCategoryEnum']; // NoteCategoryEnum!
    number: number; // Int!
    subject: NexusGenRootTypes['Subject']; // Subject!
    suggestions: NexusGenRootTypes['Suggestion'][] | null; // [Suggestion!]
    title: string; // String!
    updatedAt: any; // DateTime!
  };
  NoteComment: {
    // field return type
    author: NexusGenRootTypes['User']; // User!
    content: string; // String!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    likers: NexusGenRootTypes['User'][] | null; // [User!]
    likesCount: number; // Int!
    thread: NexusGenRootTypes['NoteCommentThread'] | null; // NoteCommentThread
    threadReply: NexusGenRootTypes['NoteCommentThread'] | null; // NoteCommentThread
    updatedAt: any; // DateTime!
  };
  NoteCommentPermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['NoteComment'][] | null; // [NoteComment!]
    type: NexusGenEnums['NoteCommentPermissionTypeEnum']; // NoteCommentPermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  NoteCommentThread: {
    // field return type
    comment: NexusGenRootTypes['NoteComment']; // NoteComment!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    note: NexusGenRootTypes['Note']; // Note!
    position: string; // String!
    replies: NexusGenRootTypes['NoteComment'][] | null; // [NoteComment!]
    updatedAt: any; // DateTime!
  };
  NoteCommentThreadPermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['NoteCommentThread'][] | null; // [NoteCommentThread!]
    type: NexusGenEnums['NoteCommentThreadPermissionTypeEnum']; // NoteCommentThreadPermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  NoteHighlight: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    note: NexusGenRootTypes['Note']; // Note!
    position: string; // String!
    updatedAt: any; // DateTime!
    user: NexusGenRootTypes['User']; // User!
  };
  NoteHighlightPermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['NoteHighlight'][] | null; // [NoteHighlight!]
    type: NexusGenEnums['NoteHighlightPermissionTypeEnum']; // NoteHighlightPermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  NotePermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['Note'][] | null; // [Note!]
    type: NexusGenEnums['NotePermissionTypeEnum']; // NotePermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  PasswordToken: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    token: string; // String!
    updatedAt: any; // DateTime!
    user: NexusGenRootTypes['User']; // User!
  };
  Permission: {
    // field return type
    departmentPermission: NexusGenRootTypes['DepartmentPermission'] | null; // DepartmentPermission
    id: string; // ID!
    institutePermission: NexusGenRootTypes['InstitutePermission'] | null; // InstitutePermission
    noteCommentPermission: NexusGenRootTypes['NoteCommentPermission'] | null; // NoteCommentPermission
    noteCommentThreadPermission: NexusGenRootTypes['NoteCommentThreadPermission'] | null; // NoteCommentThreadPermission
    noteHighlightPermission: NexusGenRootTypes['NoteHighlightPermission'] | null; // NoteHighlightPermission
    notePermission: NexusGenRootTypes['NotePermission'] | null; // NotePermission
    subjectInformationPermission: NexusGenRootTypes['SubjectInformationPermission'] | null; // SubjectInformationPermission
    subjectPermission: NexusGenRootTypes['SubjectPermission'] | null; // SubjectPermission
    suggestionPermission: NexusGenRootTypes['SuggestionPermission'] | null; // SuggestionPermission
    userPermission: NexusGenRootTypes['UserPermission'] | null; // UserPermission
  };
  Query: {
    // field return type
    department: NexusGenRootTypes['Department'] | null; // Department
    institute: NexusGenRootTypes['Institute'] | null; // Institute
    institutes: NexusGenRootTypes['Institute'][] | null; // [Institute!]
    language: NexusGenRootTypes['Language'] | null; // Language
    languages: NexusGenRootTypes['Language'][] | null; // [Language!]
    me: NexusGenRootTypes['User']; // User!
    note: NexusGenRootTypes['Note'] | null; // Note
    noteComment: NexusGenRootTypes['NoteComment'] | null; // NoteComment
    noteCommentThread: NexusGenRootTypes['NoteCommentThread'] | null; // NoteCommentThread
    noteHighlight: NexusGenRootTypes['NoteHighlight'] | null; // NoteHighlight
    subject: NexusGenRootTypes['Subject'] | null; // Subject
    subjectInformation: NexusGenRootTypes['SubjectInformation'] | null; // SubjectInformation
    suggestion: NexusGenRootTypes['Suggestion'] | null; // Suggestion
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][] | null; // [User!]
  };
  ResetPasswordToken: {
    // field return type
    createdAt: any; // DateTime!
    email: string; // ID!
    token: string; // String!
  };
  Subject: {
    // field return type
    code: string; // String!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    department: NexusGenRootTypes['Department']; // Department!
    description: string; // String!
    id: string; // ID!
    informations: NexusGenRootTypes['SubjectInformation'][] | null; // [SubjectInformation!]
    name: string; // String!
    notes: NexusGenRootTypes['Note'][] | null; // [Note!]
    students: NexusGenRootTypes['User'][] | null; // [User!]
    teachers: NexusGenRootTypes['User'][] | null; // [User!]
    updatedAt: any; // DateTime!
  };
  SubjectInformation: {
    // field return type
    content: string; // String!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    subject: NexusGenRootTypes['Subject']; // Subject!
    subtitle: string | null; // String
    title: string; // String!
    updatedAt: any; // DateTime!
  };
  SubjectInformationPermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['SubjectInformation'][] | null; // [SubjectInformation!]
    type: NexusGenEnums['SubjectInformationPermissionTypeEnum']; // SubjectInformationPermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  SubjectPermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['Subject'][] | null; // [Subject!]
    type: NexusGenEnums['SubjectPermissionTypeEnum']; // SubjectPermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  Suggestion: {
    // field return type
    approvedAt: any | null; // DateTime
    approvedBy: NexusGenRootTypes['User'] | null; // User
    author: NexusGenRootTypes['User']; // User!
    deletedAt: any | null; // DateTime
    delta: string; // String!
    id: string; // ID!
    likers: NexusGenRootTypes['User'][] | null; // [User!]
    likesCount: number; // Int!
    note: NexusGenRootTypes['Note']; // Note!
    updatedAt: any; // DateTime!
  };
  SuggestionPermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['Suggestion'][] | null; // [Suggestion!]
    type: NexusGenEnums['SuggestionPermissionTypeEnum']; // SuggestionPermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  User: {
    // field return type
    approvedSuggestions: NexusGenRootTypes['Suggestion'][] | null; // [Suggestion!]
    comments: NexusGenRootTypes['NoteComment'][] | null; // [NoteComment!]
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    departments: NexusGenRootTypes['Department'][] | null; // [Department!]
    email: string; // String!
    firstName: string; // String!
    id: string; // ID!
    identifier: string; // String!
    institutes: NexusGenRootTypes['Institute'][] | null; // [Institute!]
    lastName: string; // String!
    likedComments: NexusGenRootTypes['NoteComment'][] | null; // [NoteComment!]
    likedNotes: NexusGenRootTypes['Note'][] | null; // [Note!]
    noteHighlights: NexusGenRootTypes['NoteHighlight'][] | null; // [NoteHighlight!]
    notes: NexusGenRootTypes['Note'][] | null; // [Note!]
    password: string; // String!
    passwordToken: NexusGenRootTypes['PasswordToken'] | null; // PasswordToken
    phoneNumber: string | null; // String
    preferredLanguage: NexusGenRootTypes['Language'] | null; // Language
    profilePictureURL: string | null; // String
    role: NexusGenRootTypes['UserRole']; // UserRole!
    studiedSubjects: NexusGenRootTypes['Subject'][] | null; // [Subject!]
    suggestions: NexusGenRootTypes['Suggestion'][] | null; // [Suggestion!]
    teachedSubjects: NexusGenRootTypes['Subject'][] | null; // [Subject!]
    updatedAt: any; // DateTime!
  };
  UserPermission: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    objects: NexusGenRootTypes['User'][] | null; // [User!]
    type: NexusGenEnums['UserPermissionTypeEnum']; // UserPermissionTypeEnum!
    updatedAt: any; // DateTime!
  };
  UserRole: {
    // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    name: string; // String!
    type: NexusGenEnums['UserRoleTypeEnum']; // UserRoleTypeEnum!
    updatedAt: any; // DateTime!
  };
}

export interface NexusGenArgTypes {
  Department: {
    subjects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  DepartmentPermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  Institute: {
    departments: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    users: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  InstitutePermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  Mutation: {
    activateUser: {
      // args
      data: NexusGenInputs['ActivateUserInput']; // ActivateUserInput!
    };
    createDepartment: {
      // args
      data: NexusGenInputs['CreateDepartmentInput']; // CreateDepartmentInput!
    };
    createInstitute: {
      // args
      data: NexusGenInputs['CreateInstituteInput']; // CreateInstituteInput!
    };
    createNote: {
      // args
      data: NexusGenInputs['CreateNoteInput']; // CreateNoteInput!
    };
    createNoteComment: {
      // args
      data: NexusGenInputs['CreateNoteCommentInput']; // CreateNoteCommentInput!
    };
    createNoteCommentThread: {
      // args
      data: NexusGenInputs['CreateNoteCommentThreadInput']; // CreateNoteCommentThreadInput!
    };
    createNoteHighlight: {
      // args
      data: NexusGenInputs['CreateNoteHighlightInput']; // CreateNoteHighlightInput!
    };
    createSubject: {
      // args
      data: NexusGenInputs['CreateSubjectInput']; // CreateSubjectInput!
    };
    createSubjectInformation: {
      // args
      data: NexusGenInputs['CreateSubjectInformationInput']; // CreateSubjectInformationInput!
    };
    createSuggestion: {
      // args
      data: NexusGenInputs['CreateSuggestionInput']; // CreateSuggestionInput!
    };
    deleteDepartment: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteInstitute: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteNote: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteNoteComment: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteNoteCommentThread: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteNoteHighlight: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteSubject: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteSubjectInformation: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteSuggestion: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    deleteUser: {
      // args
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    forgotPassword: {
      // args
      data: NexusGenInputs['ForgotPasswordInput']; // ForgotPasswordInput!
    };
    login: {
      // args
      data: NexusGenInputs['UserLoginInput']; // UserLoginInput!
    };
    resetPassword: {
      // args
      data: NexusGenInputs['ResetPasswordInput']; // ResetPasswordInput!
    };
    updateDepartment: {
      // args
      data: NexusGenInputs['UpdateDepartmentInput']; // UpdateDepartmentInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    updateInstitute: {
      // args
      data: NexusGenInputs['UpdateInstituteInput']; // UpdateInstituteInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    updateNote: {
      // args
      data: NexusGenInputs['UpdateNoteInput']; // UpdateNoteInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    updateNoteComment: {
      // args
      data: NexusGenInputs['UpdateNoteCommentInput']; // UpdateNoteCommentInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    updateNoteHighlight: {
      // args
      data: NexusGenInputs['UpdateNoteHighlightInput']; // UpdateNoteHighlightInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    updateSubject: {
      // args
      data: NexusGenInputs['UpdateSubjectInput']; // UpdateSubjectInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    updateSubjectInformation: {
      // args
      data: NexusGenInputs['UpdateSubjectInformationInput']; // UpdateSubjectInformationInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    updateSuggestion: {
      // args
      data: NexusGenInputs['UpdateSuggestionInput']; // UpdateSuggestionInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    updateUser: {
      // args
      data: NexusGenInputs['UpdateUserInput']; // UpdateUserInput!
      where: NexusGenInputs['WhereUniqueInput']; // WhereUniqueInput!
    };
    uploadImage: {
      // args
      data: NexusGenInputs['ImageUploadInput']; // ImageUploadInput!
    };
  };
  Note: {
    authors: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    commentThreads: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    highlights: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    likers: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    suggestions: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  NoteComment: {
    likers: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  NoteCommentPermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  NoteCommentThread: {
    replies: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  NoteCommentThreadPermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  NoteHighlightPermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  NotePermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  Query: {
    department: {
      // args
      where: NexusGenInputs['DepartmentWhereUniqueInput']; // DepartmentWhereUniqueInput!
    };
    institute: {
      // args
      where: NexusGenInputs['InstituteWhereUniqueInput']; // InstituteWhereUniqueInput!
    };
    institutes: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    language: {
      // args
      where: NexusGenInputs['LanguageWhereUniqueInput']; // LanguageWhereUniqueInput!
    };
    languages: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    note: {
      // args
      where: NexusGenInputs['NoteWhereUniqueInput']; // NoteWhereUniqueInput!
    };
    noteComment: {
      // args
      where: NexusGenInputs['NoteCommentWhereUniqueInput']; // NoteCommentWhereUniqueInput!
    };
    noteCommentThread: {
      // args
      where: NexusGenInputs['NoteCommentThreadWhereUniqueInput']; // NoteCommentThreadWhereUniqueInput!
    };
    noteHighlight: {
      // args
      where: NexusGenInputs['NoteHighlightWhereUniqueInput']; // NoteHighlightWhereUniqueInput!
    };
    subject: {
      // args
      where: NexusGenInputs['SubjectWhereUniqueInput']; // SubjectWhereUniqueInput!
    };
    subjectInformation: {
      // args
      where: NexusGenInputs['SubjectInformationWhereUniqueInput']; // SubjectInformationWhereUniqueInput!
    };
    suggestion: {
      // args
      where: NexusGenInputs['SuggestionWhereUniqueInput']; // SuggestionWhereUniqueInput!
    };
    user: {
      // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    };
    users: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
      where?: NexusGenInputs['QueryFindManyUserWhereInput'] | null; // QueryFindManyUserWhereInput
    };
  };
  Subject: {
    informations: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    notes: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    students: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    teachers: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  SubjectInformationPermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  SubjectPermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  Suggestion: {
    likers: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  SuggestionPermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  User: {
    approvedSuggestions: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    comments: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    departments: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    institutes: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    likedComments: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    likedNotes: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    noteHighlights: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    notes: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    studiedSubjects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    suggestions: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
    teachedSubjects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
  UserPermission: {
    objects: {
      // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    };
  };
}

export interface NexusGenAbstractResolveReturnTypes {}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames =
  | 'ActivationToken'
  | 'AuthenticationPayload'
  | 'Department'
  | 'DepartmentPermission'
  | 'Institute'
  | 'InstitutePermission'
  | 'Language'
  | 'Mutation'
  | 'Note'
  | 'NoteComment'
  | 'NoteCommentPermission'
  | 'NoteCommentThread'
  | 'NoteCommentThreadPermission'
  | 'NoteHighlight'
  | 'NoteHighlightPermission'
  | 'NotePermission'
  | 'PasswordToken'
  | 'Permission'
  | 'Query'
  | 'ResetPasswordToken'
  | 'Subject'
  | 'SubjectInformation'
  | 'SubjectInformationPermission'
  | 'SubjectPermission'
  | 'Suggestion'
  | 'SuggestionPermission'
  | 'User'
  | 'UserPermission'
  | 'UserRole';

export type NexusGenInputNames =
  | 'ActivateUserInput'
  | 'BooleanFilter'
  | 'ConnectRelation'
  | 'CreateDepartmentInput'
  | 'CreateInstituteInput'
  | 'CreateNoteCommentInput'
  | 'CreateNoteCommentThreadInput'
  | 'CreateNoteHighlightInput'
  | 'CreateNoteInput'
  | 'CreateSubjectInformationInput'
  | 'CreateSubjectInput'
  | 'CreateSuggestionInput'
  | 'DepartmentWhereUniqueInput'
  | 'ForgotPasswordInput'
  | 'ImageUploadInput'
  | 'InstituteWhereUniqueInput'
  | 'LanguageWhereUniqueInput'
  | 'NoteCommentThreadWhereUniqueInput'
  | 'NoteCommentWhereUniqueInput'
  | 'NoteHighlightWhereUniqueInput'
  | 'NoteWhereUniqueInput'
  | 'NullableStringFilter'
  | 'QueryFindManyUserWhereInput'
  | 'ResetPasswordInput'
  | 'StringFilter'
  | 'SubjectInformationWhereUniqueInput'
  | 'SubjectWhereUniqueInput'
  | 'SuggestionWhereUniqueInput'
  | 'UpdateDepartmentInput'
  | 'UpdateInstituteInput'
  | 'UpdateNoteCommentInput'
  | 'UpdateNoteHighlightInput'
  | 'UpdateNoteInput'
  | 'UpdateSubjectInformationInput'
  | 'UpdateSubjectInput'
  | 'UpdateSuggestionInput'
  | 'UpdateUserInput'
  | 'UserLoginInput'
  | 'UserWhereUniqueInput'
  | 'WhereUniqueInput';

export type NexusGenEnumNames =
  | 'DepartmentPermissionTypeEnum'
  | 'InstitutePermissionTypeEnum'
  | 'NoteCategoryEnum'
  | 'NoteCommentPermissionTypeEnum'
  | 'NoteCommentThreadPermissionTypeEnum'
  | 'NoteHighlightPermissionTypeEnum'
  | 'NotePermissionTypeEnum'
  | 'SubjectInformationPermissionTypeEnum'
  | 'SubjectPermissionTypeEnum'
  | 'SuggestionPermissionTypeEnum'
  | 'UserPermissionTypeEnum'
  | 'UserRoleTypeEnum';

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = 'Boolean' | 'DateTime' | 'Float' | 'ID' | 'Int' | 'String';

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes'];
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}
