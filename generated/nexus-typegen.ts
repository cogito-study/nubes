/**
 * This file was automatically generated by GraphQL Nexus
 * Do not make changes to this file directly
 */

import * as ctx from "../src/types"
import * as photon from "@generated/photon"
import { core } from "nexus"

declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  AuthPayload: { // root type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Department: photon.Department;
  Institute: photon.Institute;
  Mutation: {};
  Note: photon.Note;
  NoteComment: photon.NoteComment;
  NoteCommentThread: photon.NoteCommentThread;
  NoteHighlight: photon.NoteHighlight;
  PasswordToken: photon.PasswordToken;
  Query: {};
  Subject: photon.Subject;
  SubjectInformation: photon.SubjectInformation;
  Suggestion: photon.Suggestion;
  TopNoteHighlight: photon.TopNoteHighlight;
  User: photon.User;
  UserRole: photon.UserRole;
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  DateTime: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
}

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    token: string; // String!
    user: NexusGenRootTypes['User']; // User!
  }
  Department: { // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    description: string; // String!
    id: string; // ID!
    institute: NexusGenRootTypes['Institute']; // Institute!
    leader: NexusGenRootTypes['User']; // User!
    name: string; // String!
    subjects: NexusGenRootTypes['Subject'][] | null; // [Subject!]
    updatedAt: any; // DateTime!
  }
  Institute: { // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    departments: NexusGenRootTypes['Department'][] | null; // [Department!]
    id: string; // ID!
    name: string; // String!
    updatedAt: any; // DateTime!
    users: NexusGenRootTypes['User'][] | null; // [User!]
  }
  Mutation: { // field return type
    login: NexusGenRootTypes['AuthPayload']; // AuthPayload!
  }
  Note: { // field return type
    authors: NexusGenRootTypes['User'][] | null; // [User!]
    commentThreads: NexusGenRootTypes['NoteCommentThread'][] | null; // [NoteCommentThread!]
    conent: string; // String!
    contentHTML: string; // String!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    description: string | null; // String
    highlights: NexusGenRootTypes['NoteHighlight'][] | null; // [NoteHighlight!]
    id: string; // ID!
    likes: NexusGenRootTypes['User'][] | null; // [User!]
    number: number; // Int!
    subject: NexusGenRootTypes['Subject'][] | null; // [Subject!]
    suggestions: NexusGenRootTypes['Suggestion']; // Suggestion!
    title: string; // String!
    topHighlights: NexusGenRootTypes['TopNoteHighlight'][] | null; // [TopNoteHighlight!]
    updatedAt: any; // DateTime!
  }
  NoteComment: { // field return type
    author: NexusGenRootTypes['User']; // User!
    content: string; // String!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    likes: NexusGenRootTypes['User'][] | null; // [User!]
    position: string; // String!
    thread: NexusGenRootTypes['NoteCommentThread'] | null; // NoteCommentThread
    threadReply: NexusGenRootTypes['NoteCommentThread'] | null; // NoteCommentThread
    updatedAt: any; // DateTime!
  }
  NoteCommentThread: { // field return type
    comment: NexusGenRootTypes['NoteComment']; // NoteComment!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    note: NexusGenRootTypes['Note']; // Note!
    replies: NexusGenRootTypes['NoteComment'][] | null; // [NoteComment!]
    updatedAt: any; // DateTime!
  }
  NoteHighlight: { // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    note: NexusGenRootTypes['Note']; // Note!
    position: string; // String!
    updatedAt: any; // DateTime!
    user: NexusGenRootTypes['User']; // User!
  }
  PasswordToken: { // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    token: string; // String!
    updatedAt: any; // DateTime!
    user: NexusGenRootTypes['User']; // User!
  }
  Query: { // field return type
    me: NexusGenRootTypes['User']; // User!
  }
  Subject: { // field return type
    code: string; // String!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    department: NexusGenRootTypes['Department']; // Department!
    description: string; // String!
    id: string; // ID!
    informations: NexusGenRootTypes['SubjectInformation'][] | null; // [SubjectInformation!]
    name: string; // String!
    notes: NexusGenRootTypes['Note'][] | null; // [Note!]
    students: NexusGenRootTypes['User'][] | null; // [User!]
    teachers: NexusGenRootTypes['User'][] | null; // [User!]
    updatedAt: any; // DateTime!
  }
  SubjectInformation: { // field return type
    content: string; // String!
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    subject: NexusGenRootTypes['Subject']; // Subject!
    subtitle: string | null; // String
    title: string; // String!
    updatedAt: any; // DateTime!
  }
  Suggestion: { // field return type
    approvedAt: any | null; // DateTime
    approvedBy: NexusGenRootTypes['User'] | null; // User
    author: NexusGenRootTypes['User']; // User!
    deletedAt: any | null; // DateTime
    delta: string; // String!
    id: string; // ID!
    note: NexusGenRootTypes['Note']; // Note!
    updatedAt: any; // DateTime!
  }
  TopNoteHighlight: { // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    note: NexusGenRootTypes['Note']; // Note!
    position: string; // String!
    updatedAt: any; // DateTime!
  }
  User: { // field return type
    approvedSuggestions: NexusGenRootTypes['Suggestion'][] | null; // [Suggestion!]
    commentLikes: NexusGenRootTypes['NoteComment'][] | null; // [NoteComment!]
    comments: NexusGenRootTypes['NoteComment'][] | null; // [NoteComment!]
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    departments: NexusGenRootTypes['Department'][] | null; // [Department!]
    email: string; // String!
    firstName: string; // String!
    id: string; // ID!
    identifier: string; // String!
    institute: NexusGenRootTypes['Institute'][] | null; // [Institute!]
    lastName: string; // String!
    noteHighlights: NexusGenRootTypes['NoteHighlight'][] | null; // [NoteHighlight!]
    noteLikes: NexusGenRootTypes['Note'][] | null; // [Note!]
    notes: NexusGenRootTypes['Note'][] | null; // [Note!]
    password: string; // String!
    passwordToken: NexusGenRootTypes['PasswordToken']; // PasswordToken!
    phoneNumber: string; // String!
    profilePictureURL: string; // String!
    role: NexusGenRootTypes['UserRole']; // UserRole!
    study: NexusGenRootTypes['Subject'][] | null; // [Subject!]
    suggestions: NexusGenRootTypes['Suggestion'][] | null; // [Suggestion!]
    teach: NexusGenRootTypes['Subject'][] | null; // [Subject!]
    updatedAt: any; // DateTime!
  }
  UserRole: { // field return type
    createdAt: any; // DateTime!
    deletedAt: any | null; // DateTime
    id: string; // ID!
    name: string; // String!
    updatedAt: any; // DateTime!
    users: NexusGenRootTypes['User']; // User!
  }
}

export interface NexusGenArgTypes {
  Department: {
    subjects: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Institute: {
    departments: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    users: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Mutation: {
    login: { // args
      email?: string | null; // String
      password?: string | null; // String
    }
  }
  Note: {
    authors: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    commentThreads: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    highlights: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    likes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    subject: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    topHighlights: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  NoteComment: {
    likes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  NoteCommentThread: {
    replies: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  Subject: {
    informations: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    notes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    students: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    teachers: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
  User: {
    approvedSuggestions: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    commentLikes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    comments: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    departments: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    institute: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    noteHighlights: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    noteLikes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    notes: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    study: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    suggestions: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
    teach: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
      skip?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "AuthPayload" | "Department" | "Institute" | "Mutation" | "Note" | "NoteComment" | "NoteCommentThread" | "NoteHighlight" | "PasswordToken" | "Query" | "Subject" | "SubjectInformation" | "Suggestion" | "TopNoteHighlight" | "User" | "UserRole";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}