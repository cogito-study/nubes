# import Comment, Note, Subject, User, UserRole, CommentSubscriptionPayload from './generated/prisma.graphql'

scalar DateTime

type Query {
  me: User
  users: [User!]
  notes: [Note!]
  subjects: [Subject!]
  user(id: ID!): User
  note(id: ID!): Note
  comment(id: ID!): Comment
  subject(code: String!): Subject
}

type Mutation {
  signup(email: String!, password: String!, neptun: String!, role: UserRole!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  activate(id: ID!, password: String!): AuthPayload!
  forgotPassword(email: String!): Boolean!
  upvoteComment(id: ID!): Comment!
  unvoteComment(id: ID!): Comment!
  submitComment(noteID: ID!, input: CommentInput!): Comment!
  deleteComment(noteID: ID!, id: ID!): Boolean!
  updateNote(id: ID!, text: Json!): Note!
  uploadImage(fileName: String, fileType: String): FileUploadPayload!
  bulkCreateUser(userDataList: [BulkCreateUserData!]!): Boolean!
  sendInvites: Boolean!
  sendResetPasswordEmail: Boolean!
  resetPassword(token: String!): Boolean!
}

input CommentInput {
  text: String!
  locationInText: String!
}

input BulkCreateUserData {
  firstName: String!
  lastName: String!
  email: String!
  userType: UserRole!
}

type AuthPayload {
  token: String!
  user: User!
}

type FileUploadPayload {
  url: String!
}
