scalar DateTime

type Query {
  me: User
  notes: [Note!]
  subjects: [Subject!]
  note(id: ID!): Note
  subject(id: ID!): Subject
}

type Mutation {
  signup(
    email: String!
    password: String!
    neptun: String!
    isAdmin: Boolean!
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

enum NoteType {
  NOTE
  CASE_STUDY
}

type Note {
  id: ID!
  authorId: ID!
  text: String!
  comments: [ID!]
  noteType: NoteType!
  description: String
  upvotes: [ID!]
}

type Comment {
  id: ID!
  authorId: ID!
  text: String!
  replies: [ID!]
  upvotes: [ID!]
}

type Subject {
  id: ID!
  name: String!
  code: String!
  faculty: [ID!]
  students: [ID!]
  subjectInfos: [ID!]!
  prerequisites: [ID!]
  notes: [ID!]
}

type SubjectInfo {
  title: String!
  subtitle: String
  text: String!
}

type User {
  id: ID!
  email: String!
  firstname: String
  lastname: String
  neptun: String!
  isAdmin: Boolean!
}
