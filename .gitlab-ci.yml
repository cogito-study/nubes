image: node:latest

stages:
  - test
  - build
  - deploy

cache:
  paths:
    - node_modules/

testing:
  stage: test
  script:
    - echo "to be implemented"

install-dependencies:
  stage: build
  script:
    - npm install
  artifacts:
    paths:
      - node_modules/

prisma-deploy-staging:
  stage: deploy
  script:
    - npm install -g prisma
    - prisma login --key $PRISMA_API_KEY
    - npm run prisma-deploy:staging
  only:
    - development

deploy-staging:
  stage: deploy
  script:
    - echo "deb http://toolbelt.heroku.com/ubuntu ./" > /etc/apt/sources.list.d/heroku.list
    - wget -O- https://toolbelt.heroku.com/apt/release.key | apt-key add -
    - apt-get update -qy
    - apt-get install -y heroku-toolbelt
    - apt-get install -y ruby-dev
    - gem install dpl
    - npm run deploy:staging
  only:
    - development

apollo-service-push-staging:
  stage: deploy
  script:
    - npm install -g apollo
    - npm run apollo-service-push:staging
  only:
    - development

deploy-prod:
  stage: deploy
  script:
    - echo "deb http://toolbelt.heroku.com/ubuntu ./" > /etc/apt/sources.list.d/heroku.list
    - wget -O- https://toolbelt.heroku.com/apt/release.key | apt-key add -
    - apt-get update -qy
    - apt-get install -y heroku-toolbelt
    - apt-get install -y ruby-dev
    - gem install dpl
    - npm install -g prisma
    - prisma login --key $PRISMA_API_KEY
    - npm run prisma-deploy:prod
    - npm run deploy:prod
  only:
    - master
